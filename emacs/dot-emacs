;;; .emacs --- Personal Emacs Customizations
;; Author: Rick Hutcheson <rick@statemachine.co>
;; Created: January 2012

;;;; Environment Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(setenv "PATH" (concat ".:/usr/bin:/usr/local/bin:" (getenv "PATH")))
(setenv "PATH" (concat ".:/usr/local/noweb:" (getenv "PATH")))
(setq exec-path (append exec-path '("/usr/bin"
                                    "/usr/texbin"
                                    "/opt/local/bin"
                                    "/usr/local/bin")))

;;;; Appearance ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Fonts
;(add-to-list 'default-frame-alist '(font . "Latin Modern Mono-10"))
(add-to-list 'default-frame-alist '(font . "Inconsolata-10"))

;;; Display Column and Line Numbers
(setq column-number-mode t)
(setq line-number-mode t)

;;; Whitespace Display
(global-whitespace-mode t) ; enable whitespace-mode
(setq whitespace-style
      (quote (face trailing space-before-tab empty space-after-tab lines)))

;;; Theme (Emacs >24)
(add-to-list 'custom-theme-load-path '"~/.emacs.d/themes")
(setq custom-safe-themes t) ; trust all themes
(add-to-list 'custom-enabled-themes 'assemblage) ; good dark theme

;;;; Global Behavior ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(tool-bar-mode 0)                   ; remove tool bar
(scroll-bar-mode 0)                 ; remove scroll bar
;(menu-bar-mode 0)                   ; remove menu
(setq inhibit-startup-screen t)     ; remove EMACS splash
(setq visible-bell t)               ; no bell on scroll-end
(setq backup-directory-alist
      `(("." . "~/.backups")))      ; global backup location
(setq x-super-keysym 'meta)         ; map CMD to META
(global-set-key "\C-x\C-m" 'execute-extended-command) ; Use C-x C-m for M-x
(global-set-key "\C-w" 'backward-kill-word)
(global-set-key "\C-x\C-k" 'kill-region)
(setq-default indent-tabs-mode nil)
; set tab stops for when indent-relative fails
(setq tab-stop-list (number-sequence 4 120 4))

;;;; Per-Environment Behavior ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(when (eq system-type 'darwin)      ; mac-specific
  (setq mac-option-modifier 'super) ; Set 'Option' key to SUPER
  (setq mac-command-modifier 'meta)) ; Set 'CMD' key to 'Meta'
;  (setq mac-allow-anti-aliasing nil))


;;;; Custom Modes ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Add Extra Repositories for easy installs
(require 'package)
(add-to-list 'package-archives
             '("marmalade" . "http://marmalade-repo.org/packages/"))
(package-initialize)

; Setup custom directories
(add-to-list 'load-path "~/.emacs.d") ; Single-file modes

; lit-mode
(require 'lit-mode)
(setq auto-mode-alist (cons '("\\.w" . lit-mode) auto-mode-alist))
(setq auto-mode-alist (cons '("\\.nw" . lit-mode) auto-mode-alist))
(add-hook 'lit-mode-hook '(lambda() (setq lit-base-mode 'tex-mode)))
(add-hook 'lit-mode-hook '(lambda() (setq lit-code-mode 'c-mode)))
(add-hook 'lit-mode-hook '(lambda() (setq lit-doc-mode 'tex-mode)))

; markdown-mode / pandoc-mode
(load "markdown-mode")
(load "pandoc-mode")
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))

;(add-hook 'markdown-mode-hook 'turn-on-pandoc)
;(add-hook 'markdown-mode-hook 'auto-fill-mode)
(defun markdown-custom ()
  "markdown-mode-hook"
  (interactive)
  (turn-on-pandoc)
  (auto-fill-mode)
  (setq markdown-enable-math t)
  (setq markdown-command "/usr/local/bin/pandoc
  --from markdown --to html5 -s --mathjax"))
(add-hook 'markdown-mode-hook '(lambda() (markdown-custom)))

; python-mode
;(setq python-indent-offset 4) ; it wasn't very effective!
(setq py-install-directory "~/.emacs.d")
(setq py-shell-name "python3")
 ; block code-folding
(add-hook 'python-mode-hook 'hs-minor-mode)
(add-hook 'python-mode-hook 'set-hs-keys)

; use flymake-mode to auto-run pylint
; from: http://www.emacswiki.org/emacs/PythonProgrammingInEmacs
(when (load "flymake" t) ; only load when flymake loaded
  (defun flymake-pylint-init ()
    (let* ((temp-file (flymake-init-create-temp-buffer-copy
                       'flymake-create-temp-inplace))
           (local-file (file-relative-name
                        temp-file
                        (file-name-directory buffer-file-name))))
      (list "epylint" (list local-file))))
  (add-to-list 'flymake-allowed-file-name-masks
             '("\\.py\\'" flymake-pylint-init)))

(defun set-hs-keys ()
  (local-set-key (kbd "C-c C-h") 'hs-hide-block)
  (local-set-key (kbd "C-c C-s") 'hs-show-block))
; resc-mode
(load "resc-mode")
(add-hook 'resc-mode-hook 'turn-on-auto-fill)

; tex-mode
(add-to-list 'auto-mode-alist '("\\.tex\\'" . plain-tex-mode))
(add-hook `plain-tex-mode-hook `turn-on-auto-fill)
